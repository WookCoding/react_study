React
	사용자인터페이스를 만들기 위한 자바스크립트 라이브러리
	복잡한 사이트를 쉽고 빠르게 만들며 관리하기 위해서 사용

라이브러리
	자주 사용되는 기능들을 모아놓은 것

사용자 인터페이스(User Interface, UI)
	- 종류
		React js 
			라이브러리
		Vue.js 
			프레임워크


SPA(Single Page Application)			
	모던 웹의 패러다임이다
	웹 앱에 필요한 모든 정적 리소스를 처음에 한번 다운로드한다. 페이지 간 이동 시, 
	페이지 갱신에 필요한 데이터만을 JSON으로 전달받아 페이지를 갱신

MPA
	전통적인 웹 방식
	새로운 페이지 요청 시 마다 새로고침이 발생되어 사용성이 좋지않다.
	필요없는 부분까지 갱신하기 때문에 비효율적이다.
	개발 생산성이 좋지 않을 수 있다.
	
	장점
		- SEO(검색 엔진 최적화)에 친화적이다.
		- 첫 로딩이 짧은 편이다.


리액트의 장점
	- 빠른 업데이트 & 렌더링 속도
	- Virtual DOM 사용
		- 가상의 돔
		- 웹페이지와 실제 돔 사이에서 중간 매개체 역할	
		- State Change -> Compute Diff -> Re-render	
	
	- Component 기반의 구조
		- component :  구성요소
		- 리액트에서는 모든 페이지가 컴포넌트로 구성
	
	- 재사용성(Reusability)
		- 다른 모듈에 의존성이 없어야한다.

		- 개발 기간이 단축됨.
		- 유지보수가 용이

	- 든든한 지원군 (Meta)
	- 활발한 지식공유 & 커뮤니티

리액트와 재사용성의 연관성
	- 하나의 컴포넌트가 재사용 될수 있다.
	- 항상 쉽고 재사용이 가능하게 개발해야한다.


React의 단점
	- 방대한 학습량
	- 계속 업데이트가 이뤄짐
	- 높은 상태관리 복잡도
	
	


	
			