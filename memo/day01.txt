React
	사용자인터페이스를 만들기 위한 자바스크립트 라이브러리
	복잡한 사이트를 쉽고 빠르게 만들며 관리하기 위해서 사용

라이브러리
	자주 사용되는 기능들을 모아놓은 것

사용자 인터페이스(User Interface, UI)
	- 종류
		React js 
			라이브러리
		Vue.js 
			프레임워크


SPA(Single Page Application)			
	모던 웹의 패러다임이다
	웹 앱에 필요한 모든 정적 리소스를 처음에 한번 다운로드한다. 페이지 간 이동 시, 
	페이지 갱신에 필요한 데이터만을 JSON으로 전달받아 페이지를 갱신

MPA
	전통적인 웹 방식
	새로운 페이지 요청 시 마다 새로고침이 발생되어 사용성이 좋지않다.
	필요없는 부분까지 갱신하기 때문에 비효율적이다.
	개발 생산성이 좋지 않을 수 있다.
	
	장점
		- SEO(검색 엔진 최적화)에 친화적이다.
		- 첫 로딩이 짧은 편이다.


리액트의 장점
	- 빠른 업데이트 & 렌더링 속도
	- Virtual DOM 사용
		- 가상의 돔
		- 웹페이지와 실제 돔 사이에서 중간 매개체 역할	
		- State Change -> Compute Diff -> Re-render	
	
	- Component 기반의 구조
		- component :  구성요소
		- 리액트에서는 모든 페이지가 컴포넌트로 구성
	
	- 재사용성(Reusability)
		- 다른 모듈에 의존성이 없어야한다.

		- 개발 기간이 단축됨.
		- 유지보수가 용이

	- 든든한 지원군 (Meta)
	- 활발한 지식공유 & 커뮤니티

리액트와 재사용성의 연관성
	- 하나의 컴포넌트가 재사용 될수 있다.
	- 항상 쉽고 재사용이 가능하게 개발해야한다.


React의 단점
	- 방대한 학습량
	- 계속 업데이트가 이뤄짐
	- 높은 상태관리 복잡도
--------------------------------------------------------------------------------------------
create-react-app
	사용하기 위한 조건
		Node.js v14.0.0 이상
		npm v6.14.0 이상
		VS Code

	#사용법
	npx create-react-app <your-project-name>
	
	#실제 사용 예제
	npx create-react-app my-app

	#경로 변경 (change directory)
	$ cd my-app
	
	#애플리케이션 실행
	$ npm start
------------------------------------------------------------------------------------------------
JSX
	A syntax extension to JavaScript
	자바스크립트의 확장 문서

	JavaScript + XML/HTML

	ex) const element = <h1>Hello, world!</h1>;

JSX의 역할
	내부적으로 XML/HTML 코드를 자바스크립트로 변환하는 과정을 거침
	
	React.createElement의 결과로 아래와 같은 객체가 생성됨

	const element = {
		type: 'h1',
		props: {
			className: 'greeting',
			children : 'Hello, world!'
		}
	}

	React.createElement의 파라미터

	React.createElement(
		type,     	: div,span 등과 같은 html 태그 또는 다른 react의 컴포넌트가 들어올수 있음
		[props],	: 속성들이 들어간다.
		[...childeren]	: 현재 엘리먼트가 포함하고 있는 자식 엘리먼트
	)
	
	- 리액트에서 JSX를 쓰는 것이 필수는 아님!
	- JSX를 사용하면 장점들이 많기 때문에 편리함.
	

JSX의 장점
	- 간결한 코드
		ex ) 
			JSX 사용함
			<div>Hello, {name}</div>

			JSX 사용안함
			React.createElement('div',null, 'Hello, ${name});

	- 가독성 향상
	- injection Attacks 방어
		ex)
			const title = response.potentiallyMaliciousInput;
			
			//이 코드는 안전합니다.
			const element = <h1>{title}</h1>;


JSX 사용법
	const name = '임종욱';
	const element = <h1>안녕, {name}</h1>;
	
	ReactDOM.render(
		element,
		document.getElementById('root')
	);

Elements란?
	어떤 물체를 구성하는 성분

React Element
	Elements는 화면에서 보이는 것들을 기술


Elements의 생김새
	리액트 Elements는 자바스크립트 객체 형태로 존재


React elements 특징
	- 불변성
		- 변하지 않는 성질
		- elements 생성후에는 children이나 attributes를 바꿀 수 없다.
	
	

















			